# adapted from http://conda.pydata.org/docs/travis.html
language: generic

# build matrices
matrix:
  include:
  - os: linux
    dist: trusty
    env: CONDA_PYTHON_VERSION=3.6
  - os: osx
    osx_image: xcode8.3
    env: CONDA_PYTHON_VERSION=3.6
  - os: linux
    dist: trusty
    env: CONDA_PYTHON_VERSION=3.7
  - os: osx
    osx_image: xcode8.3
    env: CONDA_PYTHON_VERSION=3.7

addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-3.9
        packages:
         - build-essential
         - openjdk-7-jdk
         - swig
         - libjpeg-dev
         - clang-3.9
         - libc++-dev

before_install:
 # download and install miniconda
 - echo "*************************************************"
 - echo "Building for $TRAVIS_OS_NAME"
 - echo "         for Python $CONDA_PYTHON_VERSION"
 - export PYMAJOR="3";
 - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then wget http://repo.continuum.io/miniconda/Miniconda$PYMAJOR-4.5.11-Linux-x86_64.sh -O miniconda.sh; fi
 - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget http://repo.continuum.io/miniconda/Miniconda$PYMAJOR-4.5.11-MacOSX-x86_64.sh -O miniconda.sh; fi
 - bash miniconda.sh -b -p $HOME/conda
 - export PATH="$HOME/conda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes --set changeps1 no
 - conda update -q conda
 # Useful for debugging any issues with conda
 - conda info -a

install:
 - echo "INSTALL CONDA"
 # (don't install conda compiler tools on linux -- this is gcc 4.8 right now)
 - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then conda install gcc_linux-64 gcc_linux-64 ; fi
 - if [[ "$CONDA_PYTHON_VERSION"="3.7" ]]; then conda install -c anaconda python=3.7 ; fi
 - conda install -q -c rdkit conda-build

before_script:
 # RDKit
 - echo "BEFORE SCRIPT"
 - export RDBASE=`pwd`

script:
  - echo "SCRIPT"
  - cd $RDBASE/conda
  - conda build .

